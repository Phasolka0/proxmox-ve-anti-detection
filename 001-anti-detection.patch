diff --git a/block/vhdx.c b/block/vhdx.c
index 5aa1a13506..b93f9d36ba 100644
--- a/block/vhdx.c
+++ b/block/vhdx.c
@@ -2020,7 +2020,7 @@ vhdx_co_create(BlockdevCreateOptions *opts, Error **errp)

     /* The creator field is optional, but may be useful for
      * debugging / diagnostics */
-    creator = g_utf8_to_utf16("QEMU v" QEMU_VERSION, -1, NULL,
+    creator = g_utf8_to_utf16("PVE v" QEMU_VERSION, -1, NULL,
                               &creator_items, NULL);
     signature = cpu_to_le64(VHDX_FILE_SIGNATURE);
     ret = blk_co_pwrite(blk, VHDX_FILE_ID_OFFSET, sizeof(signature), &signature,
diff --git a/block/vvfat.c b/block/vvfat.c
index 9d050ba3ae..4c7c600f16 100644
--- a/block/vvfat.c
+++ b/block/vvfat.c
@@ -1076,7 +1076,7 @@ static QemuOptsList runtime_opts = {
         {
             .name = "label",
             .type = QEMU_OPT_STRING,
-            .help = "Use a volume label other than QEMU VVFAT",
+            .help = "Use a volume label other than PVE VVFAT",
         },
         {
             .name = "rw",
diff --git a/chardev/msmouse.c b/chardev/msmouse.c
index a774c397b4..20e6e94133 100644
--- a/chardev/msmouse.c
+++ b/chardev/msmouse.c
@@ -172,7 +172,7 @@ static int msmouse_chr_write(struct Chardev *s, const uint8_t *buf, int len)
 }

 static const QemuInputHandler msmouse_handler = {
-    .name  = "QEMU Microsoft Mouse",
+    .name  = "PVE Microsoft Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = msmouse_input_event,
     .sync  = msmouse_input_sync,
diff --git a/chardev/wctablet.c b/chardev/wctablet.c
index f4008bf35b..1ed658f618 100644
--- a/chardev/wctablet.c
+++ b/chardev/wctablet.c
@@ -179,7 +179,7 @@ static void wctablet_input_sync(DeviceState *dev)
 }

 static const QemuInputHandler wctablet_handler = {
-    .name  = "QEMU Wacom Pen Tablet",
+    .name  = "PVE Wacom Pen Tablet",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_ABS,
     .event = wctablet_input_event,
     .sync  = wctablet_input_sync,
diff --git a/contrib/vhost-user-gpu/vhost-user-gpu.c b/contrib/vhost-user-gpu/vhost-user-gpu.c
index bb41758e34..84ed2ba960 100644
--- a/contrib/vhost-user-gpu/vhost-user-gpu.c
+++ b/contrib/vhost-user-gpu/vhost-user-gpu.c
@@ -1254,7 +1254,7 @@ main(int argc, char *argv[])
     QTAILQ_INIT(&g.reslist);
     QTAILQ_INIT(&g.fenceq);

-    context = g_option_context_new("QEMU vhost-user-gpu");
+    context = g_option_context_new("PVE vhost-user-gpu");
     g_option_context_add_main_entries(context, entries, NULL);
     if (!g_option_context_parse(context, &argc, &argv, &error)) {
         g_printerr("Option parsing failed: %s\n", error->message);
diff --git a/docs/specs/fw_cfg.rst b/docs/specs/fw_cfg.rst
index 5ad47a901c..21c397f1d1 100644
--- a/docs/specs/fw_cfg.rst
+++ b/docs/specs/fw_cfg.rst
@@ -97,7 +97,7 @@ Arm
 ACPI Interface
 --------------

-The fw_cfg device is defined with ACPI ID ``QEMU0002``. Since we expect
+The fw_cfg device is defined with ACPI ID ``PVE0002``. Since we expect
 ACPI tables to be passed into the guest through the fw_cfg device itself,
 the guest-side firmware can not use ACPI to find fw_cfg. However, once the
 firmware is finished setting up ACPI tables and hands control over to the
diff --git a/hw/acpi/aml-build.c b/hw/acpi/aml-build.c
index 6d4517cfbe..fc9fde7e6f 100644
--- a/hw/acpi/aml-build.c
+++ b/hw/acpi/aml-build.c
@@ -1724,11 +1724,11 @@ void acpi_table_begin(AcpiTable *desc, GArray *array)
     build_append_int_noprefix(array, 0, 4); /* Length */
     build_append_int_noprefix(array, desc->rev, 1); /* Revision */
     build_append_int_noprefix(array, 0, 1); /* Checksum */
-    build_append_padded_str(array, desc->oem_id, 6, '\0'); /* OEMID */
+    build_append_padded_str(array, ACPI_BUILD_APPNAME6, 6, '\0'); /* OEMID */
     /* OEM Table ID */
-    build_append_padded_str(array, desc->oem_table_id, 8, '\0');
+    build_append_padded_str(array, ACPI_BUILD_APPNAME8, 8, '\0');
     build_append_int_noprefix(array, 1, 4); /* OEM Revision */
-    g_array_append_vals(array, ACPI_BUILD_APPNAME8, 4); /* Creator ID */
+    g_array_append_vals(array, "AML ", 4); /* Creator ID */
     build_append_int_noprefix(array, 1, 4); /* Creator Revision */
 }

diff --git a/hw/arm/nseries.c b/hw/arm/nseries.c
index 35364312c7..882cd04383 100644
--- a/hw/arm/nseries.c
+++ b/hw/arm/nseries.c
@@ -849,7 +849,7 @@ static void n800_setup_nolo_tags(void *sram_base)

     memset(p, 0, 0x3000);

-    strcpy((void *) (p + 0), "QEMU N800");
+    strcpy((void *) (p + 0), "PVE N800");

     strcpy((void *) (p + 8), "F5");

@@ -1152,7 +1152,7 @@ static int n8x0_atag_setup(void *p, int model)

     stw_p(w++, OMAP_TAG_LCD);                  /* u16 tag */
     stw_p(w++, 36);                            /* u16 len */
-    strcpy((void *) w, "QEMU LCD panel");      /* char panel_name[16] */
+    strcpy((void *) w, "PVE LCD panel");       /* char panel_name[16] */
     w += 8;
     strcpy((void *) w, "blizzard");            /* char ctrl_name[16] */
     w += 8;
@@ -1272,11 +1272,11 @@ static int n8x0_atag_setup(void *p, int model)
     stw_p(w++, 24);                            /* u16 len */
     strcpy((void *) w, "hw-build");            /* char component[12] */
     w += 6;
-    strcpy((void *) w, "QEMU ");
+    strcpy((void *) w, "PVE ");
     pstrcat((void *) w, 12, qemu_hw_version()); /* char version[12] */
     w += 6;

-    tag = (model == 810) ? "1.1.10-qemu" : "1.1.6-qemu";
+    tag = (model == 810) ? "1.1.10-PVE" : "1.1.6-pve";
     stw_p(w++, OMAP_TAG_VERSION_STR);          /* u16 tag */
     stw_p(w++, 24);                            /* u16 len */
     strcpy((void *) w, "nolo");                        /* char component[12] */
diff --git a/hw/arm/sbsa-ref.c b/hw/arm/sbsa-ref.c
index f5709d6c14..d4ab6bac93 100644
--- a/hw/arm/sbsa-ref.c
+++ b/hw/arm/sbsa-ref.c
@@ -874,7 +874,7 @@ static void sbsa_ref_class_init(ObjectClass *oc, void *data)
     };

     mc->init = sbsa_ref_init;
-    mc->desc = "QEMU 'SBSA Reference' ARM Virtual Machine";
+    mc->desc = "QEMU 'SBSA Reference' PVE Virtual Machine";
     mc->default_cpu_type = ARM_CPU_TYPE_NAME("neoverse-n1");
     mc->valid_cpu_types = valid_cpu_types;
     mc->max_cpus = 512;
diff --git a/hw/arm/virt.c b/hw/arm/virt.c
index a9a913aead..a7b9b791c3 100644
--- a/hw/arm/virt.c
+++ b/hw/arm/virt.c
@@ -108,7 +108,7 @@ static void arm_virt_compat_set(MachineClass *mc)
         MachineClass *mc = MACHINE_CLASS(oc); \
         arm_virt_compat_set(mc); \
         virt_machine_##major##_##minor##_options(mc); \
-        mc->desc = "QEMU " # major "." # minor " ARM Virtual Machine"; \
+        mc->desc = "PVE " # major "." # minor " ARM Real Machine"; \
         if (latest) { \
             mc->alias = "virt"; \
         } \
@@ -1643,13 +1643,13 @@ static void virt_build_smbios(VirtMachineState *vms)
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
     struct smbios_phys_mem_area mem_array;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "PVE Real Machine";

     if (kvm_enabled()) {
-        product = "KVM Virtual Machine";
+        product = "PVE Real Machine";
     }

-    smbios_set_defaults("QEMU", product,
+    smbios_set_defaults("PVE", product,
                         vmc->smbios_old_sys_ver ? "1.0" : mc->name,
                         true);

diff --git a/hw/audio/hda-codec.c b/hw/audio/hda-codec.c
index b22e486fda..1d4ff4daf2 100644
--- a/hw/audio/hda-codec.c
+++ b/hw/audio/hda-codec.c
@@ -118,7 +118,7 @@ static void hda_codec_parse_fmt(uint32_t format, struct audsettings *as)

 /* some defines */

-#define QEMU_HDA_ID_VENDOR  0x1af4
+#define QEMU_HDA_ID_VENDOR  0x8086
 #define QEMU_HDA_PCM_FORMATS (AC_SUPPCM_BITS_16 |       \
                               0x1fc /* 16 -> 96 kHz */)
 #define QEMU_HDA_AMP_NONE    (0)
diff --git a/hw/char/escc.c b/hw/char/escc.c
index d450d70eda..4fcadc7a34 100644
--- a/hw/char/escc.c
+++ b/hw/char/escc.c
@@ -1037,7 +1037,7 @@ static void escc_realize(DeviceState *dev, Error **errp)

     if (s->chn[0].type == escc_mouse) {
         qemu_add_mouse_event_handler(sunmouse_event, &s->chn[0], 0,
-                                     "QEMU Sun Mouse");
+                                     "PVE Sun Mouse");
     }
     if (s->chn[1].type == escc_kbd) {
         s->chn[1].hs = qemu_input_handler_register((DeviceState *)(&s->chn[1]),
diff --git a/hw/display/edid-generate.c b/hw/display/edid-generate.c
index 2cb819675e..9831efdddf 100644
--- a/hw/display/edid-generate.c
+++ b/hw/display/edid-generate.c
@@ -394,10 +394,10 @@ void qemu_edid_generate(uint8_t *edid, size_t size,
     /* =============== set defaults  =============== */

     if (!info->vendor || strlen(info->vendor) != 3) {
-        info->vendor = "RHT";
+        info->vendor = "PVE";
     }
     if (!info->name) {
-        info->name = "QEMU Monitor";
+        info->name = "PVE Monitor";
     }
     if (!info->prefx) {
         info->prefx = 1280;
@@ -449,7 +449,7 @@ void qemu_edid_generate(uint8_t *edid, size_t size,
     uint16_t vendor_id = ((((info->vendor[0] - '@') & 0x1f) << 10) |
                           (((info->vendor[1] - '@') & 0x1f) <<  5) |
                           (((info->vendor[2] - '@') & 0x1f) <<  0));
-    uint16_t model_nr = 0x1234;
+    uint16_t model_nr = 0xA05F;
     uint32_t serial_nr = info->serial ? atoi(info->serial) : 0;
     stw_be_p(edid +  8, vendor_id);
     stw_le_p(edid + 10, model_nr);
diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
index 53f804ac16..366f9ca82e 100644
--- a/hw/i386/acpi-build.c
+++ b/hw/i386/acpi-build.c
@@ -2661,6 +2661,14 @@ void acpi_build(AcpiBuildTables *tables, MachineState *machine)
         g_array_append_vals(tables_blob, u, len);
     }

+    /* Disable BGRT (UEFI Logo)*/
+    acpi_add_table(table_offsets, tables_blob);
+    AcpiTable table = { .sig = "BGRT", .rev = 1,
+                         .oem_id = x86ms->oem_id, .oem_table_id = x86ms->oem_table_id };
+    acpi_table_begin(&table, tables_blob);
+    build_append_int_noprefix(tables_blob,0x00000000,4);
+    acpi_table_end(tables->linker, &table);
+
     /* RSDT is pointed to by RSDP */
     rsdt = tables_blob->len;
     build_rsdt(tables_blob, tables->linker, table_offsets,
diff --git a/hw/i386/fw_cfg.c b/hw/i386/fw_cfg.c
index d802d2787f..5bb97efa12 100644
--- a/hw/i386/fw_cfg.c
+++ b/hw/i386/fw_cfg.c
@@ -63,7 +63,7 @@ void fw_cfg_build_smbios(PCMachineState *pcms, FWCfgState *fw_cfg,

     if (pcmc->smbios_defaults) {
         /* These values are guest ABI, do not change */
-        smbios_set_defaults("QEMU", mc->desc, mc->name,
+        smbios_set_defaults("PVE", "21K5000JGE", mc->name,
                             pcmc->smbios_uuid_encoded);
     }

@@ -218,7 +218,7 @@ void fw_cfg_add_acpi_dsdt(Aml *scope, FWCfgState *fw_cfg)
     Aml *dev = aml_device("FWCF");
     Aml *crs = aml_resource_template();

-    aml_append(dev, aml_name_decl("_HID", aml_string("QEMU0002")));
+    aml_append(dev, aml_name_decl("_HID", aml_string("PVE0002")));

     /* device present, functioning, decoding, not shown in UI */
     aml_append(dev, aml_name_decl("_STA", aml_int(0xB)));
diff --git a/hw/i386/pc.c b/hw/i386/pc.c
index 5c21b0c4db..8640fb84f1 100644
--- a/hw/i386/pc.c
+++ b/hw/i386/pc.c
@@ -74,9 +74,9 @@
  * depending on QEMU versions up to QEMU 2.4.
  */
 #define PC_CPU_MODEL_IDS(v) \
-    { "qemu32-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },\
-    { "qemu64-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },\
-    { "athlon-" TYPE_X86_CPU, "model-id", "QEMU Virtual CPU version " v, },
+    { "qemu32-" TYPE_X86_CPU, "model-id", "PVE Real CPU version " v, },\
+    { "qemu64-" TYPE_X86_CPU, "model-id", "PVE Real CPU version " v, },\
+    { "athlon-" TYPE_X86_CPU, "model-id", "PVE Real CPU version " v, },

 GlobalProperty pc_compat_8_2[] = {};
 const size_t pc_compat_8_2_len = G_N_ELEMENTS(pc_compat_8_2);
diff --git a/hw/ide/atapi.c b/hw/ide/atapi.c
index 73ec373184..8301e62cea 100644
--- a/hw/ide/atapi.c
+++ b/hw/ide/atapi.c
@@ -797,8 +797,8 @@ static void cmd_inquiry(IDEState *s, uint8_t *buf)
         buf[5] = 0;    /* reserved */
         buf[6] = 0;    /* reserved */
         buf[7] = 0;    /* reserved */
-        padstr8(buf + 8, 8, "QEMU");
-        padstr8(buf + 16, 16, "QEMU DVD-ROM");
+        padstr8(buf + 8, 8, "PVE");
+        padstr8(buf + 16, 16, "PVE DVD-ROM");
         padstr8(buf + 32, 4, s->version);
         idx = 36;
     }
diff --git a/hw/ide/core.c b/hw/ide/core.c
index e8cb2dac92..3e603d2c9d 100644
--- a/hw/ide/core.c
+++ b/hw/ide/core.c
@@ -2627,20 +2627,20 @@ int ide_init_drive(IDEState *s, IDEDevice *dev, IDEDriveKind kind, Error **errp)
         pstrcpy(s->drive_serial_str, sizeof(s->drive_serial_str), dev->serial);
     } else {
         snprintf(s->drive_serial_str, sizeof(s->drive_serial_str),
-                 "QM%05d", s->drive_serial);
+                 "PVE%05d", s->drive_serial);
     }
     if (dev->model) {
         pstrcpy(s->drive_model_str, sizeof(s->drive_model_str), dev->model);
     } else {
         switch (kind) {
         case IDE_CD:
-            strcpy(s->drive_model_str, "QEMU DVD-ROM");
+            strcpy(s->drive_model_str, "PVE DVD-ROM");
             break;
         case IDE_CFATA:
-            strcpy(s->drive_model_str, "QEMU MICRODRIVE");
+            strcpy(s->drive_model_str, "PVE MICRODRIVE");
             break;
         default:
-            strcpy(s->drive_model_str, "QEMU HARDDISK");
+            strcpy(s->drive_model_str, "PVE HARDDISK");
             break;
         }
     }
diff --git a/hw/input/adb-kbd.c b/hw/input/adb-kbd.c
index 758fa6d267..cc27d6dee6 100644
--- a/hw/input/adb-kbd.c
+++ b/hw/input/adb-kbd.c
@@ -1,5 +1,5 @@
 /*
- * QEMU ADB keyboard support
+ * PVE ADB keyboard support
  *
  * Copyright (c) 2004 Fabrice Bellard
  *
@@ -356,7 +356,7 @@ static void adb_kbd_reset(DeviceState *dev)
 }

 static const QemuInputHandler adb_keyboard_handler = {
-    .name  = "QEMU ADB Keyboard",
+    .name  = "PVE ADB Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = adb_keyboard_event,
 };
diff --git a/hw/input/adb-mouse.c b/hw/input/adb-mouse.c
index 144a0ccce7..d0f51a53ec 100644
--- a/hw/input/adb-mouse.c
+++ b/hw/input/adb-mouse.c
@@ -1,5 +1,5 @@
 /*
- * QEMU ADB mouse support
+ * PVE ADB mouse support
  *
  * Copyright (c) 2004 Fabrice Bellard
  *
@@ -236,7 +236,7 @@ static void adb_mouse_realizefn(DeviceState *dev, Error **errp)

     amc->parent_realize(dev, errp);

-    qemu_add_mouse_event_handler(adb_mouse_event, s, 0, "QEMU ADB Mouse");
+    qemu_add_mouse_event_handler(adb_mouse_event, s, 0, "PVE ADB Mouse");
 }

 static void adb_mouse_initfn(Object *obj)
diff --git a/hw/input/ads7846.c b/hw/input/ads7846.c
index cde3892216..9d792a7298 100644
--- a/hw/input/ads7846.c
+++ b/hw/input/ads7846.c
@@ -154,7 +154,7 @@ static void ads7846_realize(SSIPeripheral *d, Error **errp)

     /* We want absolute coordinates */
     qemu_add_mouse_event_handler(ads7846_ts_event, s, 1,
-                    "QEMU ADS7846-driven Touchscreen");
+                    "PVE ADS7846-driven Touchscreen");

     ads7846_int_update(s);

diff --git a/hw/input/hid.c b/hw/input/hid.c
index 76bedc1844..f3ea55cadb 100644
--- a/hw/input/hid.c
+++ b/hw/input/hid.c
@@ -511,20 +511,20 @@ void hid_free(HIDState *hs)
 }

 static const QemuInputHandler hid_keyboard_handler = {
-    .name  = "QEMU HID Keyboard",
+    .name  = "PVE HID Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = hid_keyboard_event,
 };

 static const QemuInputHandler hid_mouse_handler = {
-    .name  = "QEMU HID Mouse",
+    .name  = "PVE HID Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = hid_pointer_event,
     .sync  = hid_pointer_sync,
 };

 static const QemuInputHandler hid_tablet_handler = {
-    .name  = "QEMU HID Tablet",
+    .name  = "PVE HID Tablet",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_ABS,
     .event = hid_pointer_event,
     .sync  = hid_pointer_sync,
diff --git a/hw/input/ps2.c b/hw/input/ps2.c
index 00b695a0b9..6b66c67c85 100644
--- a/hw/input/ps2.c
+++ b/hw/input/ps2.c
@@ -1232,7 +1232,7 @@ static const VMStateDescription vmstate_ps2_mouse = {
 };

 static const QemuInputHandler ps2_keyboard_handler = {
-    .name  = "QEMU PS/2 Keyboard",
+    .name  = "PVE PS/2 Keyboard",
     .mask  = INPUT_EVENT_MASK_KEY,
     .event = ps2_keyboard_event,
 };
@@ -1243,7 +1243,7 @@ static void ps2_kbd_realize(DeviceState *dev, Error **errp)
 }

 static const QemuInputHandler ps2_mouse_handler = {
-    .name  = "QEMU PS/2 Mouse",
+    .name  = "PVE PS/2 Mouse",
     .mask  = INPUT_EVENT_MASK_BTN | INPUT_EVENT_MASK_REL,
     .event = ps2_mouse_event,
     .sync  = ps2_mouse_sync,
diff --git a/hw/input/tsc2005.c b/hw/input/tsc2005.c
index 941f163d36..bec7689061 100644
--- a/hw/input/tsc2005.c
+++ b/hw/input/tsc2005.c
@@ -510,7 +510,7 @@ void *tsc2005_init(qemu_irq pintdav)
     tsc2005_reset(s);

     qemu_add_mouse_event_handler(tsc2005_touchscreen_event, s, 1,
-                    "QEMU TSC2005-driven Touchscreen");
+                    "PVE TSC2005-driven Touchscreen");

     qemu_register_reset((void *) tsc2005_reset, s);
     vmstate_register(NULL, 0, &vmstate_tsc2005, s);
diff --git a/hw/input/tsc210x.c b/hw/input/tsc210x.c
index c4e32c7a42..7283aa45ee 100644
--- a/hw/input/tsc210x.c
+++ b/hw/input/tsc210x.c
@@ -1122,7 +1122,7 @@ uWireSlave *tsc2102_init(qemu_irq pint)
     s->model = 0x2102;
     s->name = "tsc2102";

-    tsc210x_init(s, "QEMU TSC2102-driven Touchscreen", &vmstate_tsc2102);
+    tsc210x_init(s, "PVE TSC2102-driven Touchscreen", &vmstate_tsc2102);

     return &s->chip;
 }
@@ -1143,7 +1143,7 @@ uWireSlave *tsc2301_init(qemu_irq penirq, qemu_irq kbirq, qemu_irq dav)
     s->model = 0x2301;
     s->name = "tsc2301";

-    tsc210x_init(s, "QEMU TSC2301-driven Touchscreen", &vmstate_tsc2301);
+    tsc210x_init(s, "PVE TSC2301-driven Touchscreen", &vmstate_tsc2301);

     return &s->chip;
 }
diff --git a/hw/input/virtio-input-hid.c b/hw/input/virtio-input-hid.c
index 45e4d4c75d..b17bdadbdb 100644
--- a/hw/input/virtio-input-hid.c
+++ b/hw/input/virtio-input-hid.c
@@ -16,10 +16,10 @@

 #include "standard-headers/linux/input.h"

-#define VIRTIO_ID_NAME_KEYBOARD     "QEMU Virtio Keyboard"
-#define VIRTIO_ID_NAME_MOUSE        "QEMU Virtio Mouse"
-#define VIRTIO_ID_NAME_TABLET       "QEMU Virtio Tablet"
-#define VIRTIO_ID_NAME_MULTITOUCH   "QEMU Virtio MultiTouch"
+#define VIRTIO_ID_NAME_KEYBOARD     "PVE Virtio Keyboard"
+#define VIRTIO_ID_NAME_MOUSE        "PVE Virtio Mouse"
+#define VIRTIO_ID_NAME_TABLET       "PVE Virtio Tablet"
+#define VIRTIO_ID_NAME_MULTITOUCH   "PVE Virtio MultiTouch"

 /* ----------------------------------------------------------------- */

diff --git a/hw/loongarch/virt.c b/hw/loongarch/virt.c
index 83d3d7522f..e308769667 100644
--- a/hw/loongarch/virt.c
+++ b/hw/loongarch/virt.c
@@ -350,13 +350,13 @@ static void virt_build_smbios(LoongArchMachineState *lams)
     MachineClass *mc = MACHINE_GET_CLASS(lams);
     uint8_t *smbios_tables, *smbios_anchor;
     size_t smbios_tables_len, smbios_anchor_len;
-    const char *product = "QEMU Virtual Machine";
+    const char *product = "PVE Virtual Machine";

     if (!lams->fw_cfg) {
         return;
     }

-    smbios_set_defaults("QEMU", product, mc->name, true);
+    smbios_set_defaults("PVE", product, mc->name, true);

     smbios_get_tables(ms, SMBIOS_ENTRY_POINT_TYPE_64,
                       NULL, 0,
diff --git a/hw/nvme/ctrl.c b/hw/nvme/ctrl.c
index e89f9f7808..10448efac7 100644
--- a/hw/nvme/ctrl.c
+++ b/hw/nvme/ctrl.c
@@ -8195,7 +8195,7 @@ static void nvme_init_ctrl(NvmeCtrl *n, PCIDevice *pci_dev)

     id->vid = cpu_to_le16(pci_get_word(pci_conf + PCI_VENDOR_ID));
     id->ssvid = cpu_to_le16(pci_get_word(pci_conf + PCI_SUBSYSTEM_VENDOR_ID));
-    strpadcpy((char *)id->mn, sizeof(id->mn), "QEMU NVMe Ctrl", ' ');
+    strpadcpy((char *)id->mn, sizeof(id->mn), "PVE NVMe Ctrl", ' ');
     strpadcpy((char *)id->fr, sizeof(id->fr), QEMU_VERSION, ' ');
     strpadcpy((char *)id->sn, sizeof(id->sn), n->params.serial, ' ');

diff --git a/hw/nvram/fw_cfg.c b/hw/nvram/fw_cfg.c
index fc0263f349..174bfe450e 100644
--- a/hw/nvram/fw_cfg.c
+++ b/hw/nvram/fw_cfg.c
@@ -57,7 +57,7 @@
 #define FW_CFG_DMA_CTL_SELECT  0x08
 #define FW_CFG_DMA_CTL_WRITE   0x10

-#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE 0x4153532520444647ULL /* "QEMU CFG" */

 struct FWCfgEntry {
     uint32_t len;
diff --git a/hw/pci-host/gpex.c b/hw/pci-host/gpex.c
index e9cf455bf5..38feae304b 100644
--- a/hw/pci-host/gpex.c
+++ b/hw/pci-host/gpex.c
@@ -219,7 +219,7 @@ static void gpex_root_class_init(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);

     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);
-    dc->desc = "QEMU generic PCIe host bridge";
+    dc->desc = "PVE generic PCIe host bridge";
     dc->vmsd = &vmstate_gpex_root;
     k->vendor_id = PCI_VENDOR_ID_REDHAT;
     k->device_id = PCI_DEVICE_ID_REDHAT_PCIE_HOST;
diff --git a/hw/ppc/e500plat.c b/hw/ppc/e500plat.c
index 7aa2f2107a..14c0676399 100644
--- a/hw/ppc/e500plat.c
+++ b/hw/ppc/e500plat.c
@@ -22,7 +22,7 @@

 static void e500plat_fixup_devtree(void *fdt)
 {
-    const char model[] = "QEMU ppce500";
+    const char model[] = "PVE ppce500";
     const char compatible[] = "fsl,qemu-e500";

     qemu_fdt_setprop(fdt, "/", "model", model, sizeof(model));
diff --git a/hw/scsi/mptconfig.c b/hw/scsi/mptconfig.c
index 19d01f39fa..a7b34c5dbc 100644
--- a/hw/scsi/mptconfig.c
+++ b/hw/scsi/mptconfig.c
@@ -189,12 +189,12 @@ static
 size_t mptsas_config_manufacturing_0(MPTSASState *s, uint8_t **data, int address)
 {
     return MPTSAS_CONFIG_PACK(0, MPI_CONFIG_PAGETYPE_MANUFACTURING, 0x00,
-                              "s16s8s16s16s16",
-                              "QEMU MPT Fusion",
+                              "s11s4s51s41s91",
+                              "PVE MPT Fusion",
                               "2.5",
-                              "QEMU MPT Fusion",
-                              "QEMU",
-                              "0000111122223333");
+                              "PVE MPT Fusion",
+                              "PVE",
+                              "1145143919810003");
 }

 static
diff --git a/hw/scsi/scsi-bus.c b/hw/scsi/scsi-bus.c
index 9e40b0c920..a029f9ef28 100644
--- a/hw/scsi/scsi-bus.c
+++ b/hw/scsi/scsi-bus.c
@@ -643,8 +643,8 @@ static bool scsi_target_emulate_inquiry(SCSITargetReq *r)
         r->buf[3] = 2 | 0x10; /* HiSup, response data format */
         r->buf[4] = r->len - 5; /* Additional Length = (Len - 1) - 4 */
         r->buf[7] = 0x10 | (r->req.bus->info->tcq ? 0x02 : 0); /* Sync, TCQ.  */
-        memcpy(&r->buf[8], "QEMU    ", 8);
-        memcpy(&r->buf[16], "QEMU TARGET     ", 16);
+        memcpy(&r->buf[8], "PVE    ", 8);
+        memcpy(&r->buf[16], "PVE TARGET     ", 16);
         pstrcpy((char *) &r->buf[32], 4, qemu_hw_version());
     }
     return true;
diff --git a/hw/scsi/scsi-disk.c b/hw/scsi/scsi-disk.c
index 4bd7af9d0c..7ae10895e4 100644
--- a/hw/scsi/scsi-disk.c
+++ b/hw/scsi/scsi-disk.c
@@ -2499,7 +2499,7 @@ static void scsi_realize(SCSIDevice *dev, Error **errp)
         s->version = g_strdup(qemu_hw_version());
     }
     if (!s->vendor) {
-        s->vendor = g_strdup("QEMU");
+        s->vendor = g_strdup("PVE");
     }
     if (!s->device_id) {
         if (s->serial) {
@@ -2552,7 +2552,7 @@ static void scsi_hd_realize(SCSIDevice *dev, Error **errp)
     s->qdev.blocksize = s->qdev.conf.logical_block_size;
     s->qdev.type = TYPE_DISK;
     if (!s->product) {
-        s->product = g_strdup("QEMU HARDDISK");
+        s->product = g_strdup("PVE HARDDISK");
     }
     scsi_realize(&s->qdev, errp);
 }
@@ -2579,7 +2579,7 @@ static void scsi_cd_realize(SCSIDevice *dev, Error **errp)
     s->qdev.type = TYPE_ROM;
     s->features |= 1 << SCSI_DISK_F_REMOVABLE;
     if (!s->product) {
-        s->product = g_strdup("QEMU CD-ROM");
+        s->product = g_strdup("PVE CD-ROM");
     }
     scsi_realize(&s->qdev, errp);
 }
diff --git a/hw/scsi/spapr_vscsi.c b/hw/scsi/spapr_vscsi.c
index c75a6c8807..c241f432de 100644
--- a/hw/scsi/spapr_vscsi.c
+++ b/hw/scsi/spapr_vscsi.c
@@ -713,8 +713,8 @@ static void vscsi_inquiry_no_target(VSCSIState *s, vscsi_req *req)
     resp_data[3] = 0x02;   /* Resp data format */
     resp_data[4] = 36 - 5; /* Additional length */
     resp_data[7] = 0x10;   /* Sync transfers */
-    memcpy(&resp_data[16], "QEMU EMPTY      ", 16);
-    memcpy(&resp_data[8], "QEMU    ", 8);
+    memcpy(&resp_data[16], "PVE EMPTY      ", 16);
+    memcpy(&resp_data[8], "PVE    ", 8);

     req->writing = 0;
     vscsi_preprocess_desc(req);
diff --git a/hw/smbios/smbios.c b/hw/smbios/smbios.c
index eed5787b15..0258a9835d 100644
--- a/hw/smbios/smbios.c
+++ b/hw/smbios/smbios.c
@@ -574,7 +574,7 @@ static void smbios_build_type_0_table(void)

     t->bios_characteristics = cpu_to_le64(0x08); /* Not supported */
     t->bios_characteristics_extension_bytes[0] = 0;
-    t->bios_characteristics_extension_bytes[1] = 0x14; /* TCD/SVVP | VM */
+    t->bios_characteristics_extension_bytes[1] = 0x08; /* TCD/SVVP | VM */
     if (smbios_type0.uefi) {
         t->bios_characteristics_extension_bytes[1] |= 0x08; /* |= UEFI */
     }
diff --git a/hw/usb/dev-audio.c b/hw/usb/dev-audio.c
index 1897fff9e6..f81d9351cb 100644
--- a/hw/usb/dev-audio.c
+++ b/hw/usb/dev-audio.c
@@ -73,8 +73,8 @@ enum usb_audio_strings {
 };

 static const USBDescStrings usb_audio_stringtable = {
-    [STRING_MANUFACTURER]       = "QEMU",
-    [STRING_PRODUCT]            = "QEMU USB Audio",
+    [STRING_MANUFACTURER]       = "PVE",
+    [STRING_PRODUCT]            = "PVE USB Audio",
     [STRING_SERIALNUMBER]       = "1",
     [STRING_CONFIG]             = "Audio Configuration",
     [STRING_USBAUDIO_CONTROL]   = "Audio Device",
@@ -1006,7 +1006,7 @@ static void usb_audio_class_init(ObjectClass *klass, void *data)
     dc->vmsd          = &vmstate_usb_audio;
     device_class_set_props(dc, usb_audio_properties);
     set_bit(DEVICE_CATEGORY_SOUND, dc->categories);
-    k->product_desc   = "QEMU USB Audio Interface";
+    k->product_desc   = "PVE USB Audio Interface";
     k->realize        = usb_audio_realize;
     k->handle_reset   = usb_audio_handle_reset;
     k->handle_control = usb_audio_handle_control;
diff --git a/hw/usb/dev-hid.c b/hw/usb/dev-hid.c
index 9e358c934e..0773cf6d2d 100644
--- a/hw/usb/dev-hid.c
+++ b/hw/usb/dev-hid.c
@@ -63,10 +63,10 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER]     = "QEMU",
-    [STR_PRODUCT_MOUSE]    = "QEMU USB Mouse",
-    [STR_PRODUCT_TABLET]   = "QEMU USB Tablet",
-    [STR_PRODUCT_KEYBOARD] = "QEMU USB Keyboard",
+    [STR_MANUFACTURER]     = "PVE",
+    [STR_PRODUCT_MOUSE]    = "PVE USB Mouse",
+    [STR_PRODUCT_TABLET]   = "PVE USB Tablet",
+    [STR_PRODUCT_KEYBOARD] = "PVE USB Keyboard",
     [STR_SERIAL_COMPAT]    = "42",
     [STR_CONFIG_MOUSE]     = "HID Mouse",
     [STR_CONFIG_TABLET]    = "HID Tablet",
@@ -806,7 +806,7 @@ static void usb_tablet_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_tablet_realize;
-    uc->product_desc   = "QEMU USB Tablet";
+    uc->product_desc   = "PVE USB Tablet";
     dc->vmsd = &vmstate_usb_ptr;
     device_class_set_props(dc, usb_tablet_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
@@ -829,7 +829,7 @@ static void usb_mouse_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_mouse_realize;
-    uc->product_desc   = "QEMU USB Mouse";
+    uc->product_desc   = "PVE USB Mouse";
     dc->vmsd = &vmstate_usb_ptr;
     device_class_set_props(dc, usb_mouse_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
@@ -853,7 +853,7 @@ static void usb_keyboard_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_keyboard_realize;
-    uc->product_desc   = "QEMU USB Keyboard";
+    uc->product_desc   = "PVE USB Keyboard";
     dc->vmsd = &vmstate_usb_kbd;
     device_class_set_props(dc, usb_keyboard_properties);
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
diff --git a/hw/usb/dev-hub.c b/hw/usb/dev-hub.c
index 06e9537d03..e8144283b3 100644
--- a/hw/usb/dev-hub.c
+++ b/hw/usb/dev-hub.c
@@ -104,9 +104,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER] = "QEMU",
-    [STR_PRODUCT]      = "QEMU USB Hub",
-    [STR_SERIALNUMBER] = "314159",
+    [STR_MANUFACTURER] = "PVE",
+    [STR_PRODUCT]      = "PVE USB Hub",
+    [STR_SERIALNUMBER] = "144516",
 };

 static const USBDescIface desc_iface_hub = {
@@ -676,7 +676,7 @@ static void usb_hub_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_hub_realize;
-    uc->product_desc   = "QEMU USB Hub";
+    uc->product_desc   = "PVE USB Hub";
     uc->usb_desc       = &desc_hub;
     uc->find_device    = usb_hub_find_device;
     uc->handle_reset   = usb_hub_handle_reset;
diff --git a/hw/usb/dev-mtp.c b/hw/usb/dev-mtp.c
index 7e4a0765ae..67b6b9f369 100644
--- a/hw/usb/dev-mtp.c
+++ b/hw/usb/dev-mtp.c
@@ -247,8 +247,8 @@ OBJECT_DECLARE_SIMPLE_TYPE(MTPState, USB_MTP)

 /* ----------------------------------------------------------------------- */

-#define MTP_MANUFACTURER  "QEMU"
-#define MTP_PRODUCT       "QEMU filesharing"
+#define MTP_MANUFACTURER  "PVE"
+#define MTP_PRODUCT       "PVE filesharing"
 #define MTP_WRITE_BUF_SZ  (512 * KiB)

 enum {
@@ -362,7 +362,7 @@ static const USBDescMSOS desc_msos = {

 static const USBDesc desc = {
     .id = {
-        .idVendor          = 0x46f4, /* CRC16() of "QEMU" */
+        .idVendor          = 0x116d, /* CRC16() of "PVE" */
         .idProduct         = 0x0004,
         .bcdDevice         = 0,
         .iManufacturer     = STR_MANUFACTURER,
@@ -2091,7 +2091,7 @@ static void usb_mtp_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_mtp_realize;
-    uc->product_desc   = "QEMU USB MTP";
+    uc->product_desc   = "PVE USB MTP";
     uc->usb_desc       = &desc;
     uc->cancel_packet  = usb_mtp_cancel_packet;
     uc->handle_attach  = usb_desc_attach;
diff --git a/hw/usb/dev-network.c b/hw/usb/dev-network.c
index 2c33e36cad..b152831f95 100644
--- a/hw/usb/dev-network.c
+++ b/hw/usb/dev-network.c
@@ -99,16 +99,16 @@ enum usbstring_idx {
 #define ETH_FRAME_LEN                   1514 /* Max. octets in frame sans FCS */

 static const USBDescStrings usb_net_stringtable = {
-    [STRING_MANUFACTURER]       = "QEMU",
-    [STRING_PRODUCT]            = "RNDIS/QEMU USB Network Device",
-    [STRING_ETHADDR]            = "400102030405",
-    [STRING_DATA]               = "QEMU USB Net Data Interface",
-    [STRING_CONTROL]            = "QEMU USB Net Control Interface",
-    [STRING_RNDIS_CONTROL]      = "QEMU USB Net RNDIS Control Interface",
-    [STRING_CDC]                = "QEMU USB Net CDC",
-    [STRING_SUBSET]             = "QEMU USB Net Subset",
-    [STRING_RNDIS]              = "QEMU USB Net RNDIS",
-    [STRING_SERIALNUMBER]       = "1",
+    [STRING_MANUFACTURER]       = "PVE",
+    [STRING_PRODUCT]            = "RNDIS/PVE USB Network Device",
+    [STRING_ETHADDR]            = "400144514405",
+    [STRING_DATA]               = "PVE USB Net Data Interface",
+    [STRING_CONTROL]            = "PVE USB Net Control Interface",
+    [STRING_RNDIS_CONTROL]      = "PVE USB Net RNDIS Control Interface",
+    [STRING_CDC]                = "PVE USB Net CDC",
+    [STRING_SUBSET]             = "PVE USB Net Subset",
+    [STRING_RNDIS]              = "PVE USB Net RNDIS",
+    [STRING_SERIALNUMBER]       = "48878977",
 };

 static const USBDescIface desc_iface_rndis[] = {
@@ -725,7 +725,7 @@ static int ndis_query(USBNetState *s, uint32_t oid,

     /* mandatory */
     case OID_GEN_VENDOR_DESCRIPTION:
-        pstrcpy((char *)outbuf, outlen, "QEMU USB RNDIS Net");
+        pstrcpy((char *)outbuf, outlen, "PVE USB RNDIS Net");
         return strlen((char *)outbuf) + 1;

     case OID_GEN_VENDOR_DRIVER_VERSION:
@@ -1426,7 +1426,7 @@ static void usb_net_class_initfn(ObjectClass *klass, void *data)
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

     uc->realize        = usb_net_realize;
-    uc->product_desc   = "QEMU USB Network Interface";
+    uc->product_desc   = "PVE USB Network Interface";
     uc->usb_desc       = &desc_net;
     uc->handle_reset   = usb_net_handle_reset;
     uc->handle_control = usb_net_handle_control;
diff --git a/hw/usb/dev-serial.c b/hw/usb/dev-serial.c
index 63047d79cf..05461a345a 100644
--- a/hw/usb/dev-serial.c
+++ b/hw/usb/dev-serial.c
@@ -119,10 +119,10 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER]    = "QEMU",
-    [STR_PRODUCT_SERIAL]  = "QEMU USB SERIAL",
-    [STR_PRODUCT_BRAILLE] = "QEMU USB BAUM BRAILLE",
-    [STR_SERIALNUMBER]    = "1",
+    [STR_MANUFACTURER]    = "PVE",
+    [STR_PRODUCT_SERIAL]  = "PVE USB SERIAL",
+    [STR_PRODUCT_BRAILLE] = "PVE USB BAUM BRAILLE",
+    [STR_SERIALNUMBER]    = "39344424",
 };

 static const USBDescIface desc_iface0 = {
@@ -666,7 +666,7 @@ static void usb_serial_class_initfn(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

-    uc->product_desc   = "QEMU USB Serial";
+    uc->product_desc   = "PVE USB Serial";
     uc->usb_desc       = &desc_serial;
     device_class_set_props(dc, serial_properties);
 }
@@ -687,7 +687,7 @@ static void usb_braille_class_initfn(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

-    uc->product_desc   = "QEMU USB Braille";
+    uc->product_desc   = "PVE USB Braille";
     uc->usb_desc       = &desc_braille;
     device_class_set_props(dc, braille_properties);
 }
diff --git a/hw/usb/dev-smartcard-reader.c b/hw/usb/dev-smartcard-reader.c
index c0d63e0425..11bb4ef469 100644
--- a/hw/usb/dev-smartcard-reader.c
+++ b/hw/usb/dev-smartcard-reader.c
@@ -80,10 +80,10 @@ OBJECT_DECLARE_SIMPLE_TYPE(USBCCIDState, USB_CCID_DEV)
 #define CCID_CONTROL_GET_CLOCK_FREQUENCIES  0x2
 #define CCID_CONTROL_GET_DATA_RATES         0x3

-#define CCID_PRODUCT_DESCRIPTION        "QEMU USB CCID"
-#define CCID_VENDOR_DESCRIPTION         "QEMU"
+#define CCID_PRODUCT_DESCRIPTION        "PVE USB CCID"
+#define CCID_VENDOR_DESCRIPTION         "PVE"
 #define CCID_INTERFACE_NAME             "CCID Interface"
-#define CCID_SERIAL_NUMBER_STRING       "1"
+#define CCID_SERIAL_NUMBER_STRING       "83394"
 /*
  * Using Gemplus Vendor and Product id
  * Effect on various drivers:
@@ -419,9 +419,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER]  = "QEMU",
-    [STR_PRODUCT]       = "QEMU USB CCID",
-    [STR_SERIALNUMBER]  = "1",
+    [STR_MANUFACTURER]  = "PVE",
+    [STR_PRODUCT]       = "PVE USB CCID",
+    [STR_SERIALNUMBER]  = "83394",
     [STR_INTERFACE]     = "CCID Interface",
 };

diff --git a/hw/usb/dev-storage.c b/hw/usb/dev-storage.c
index 341e505bd0..b1c9ece210 100644
--- a/hw/usb/dev-storage.c
+++ b/hw/usb/dev-storage.c
@@ -47,9 +47,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER] = "QEMU",
-    [STR_PRODUCT]      = "QEMU USB HARDDRIVE",
-    [STR_SERIALNUMBER] = "1",
+    [STR_MANUFACTURER] = "PVE",
+    [STR_PRODUCT]      = "PVE USB HARDDRIVE",
+    [STR_SERIALNUMBER] = "8876542",
     [STR_CONFIG_FULL]  = "Full speed config (usb 1.1)",
     [STR_CONFIG_HIGH]  = "High speed config (usb 2.0)",
     [STR_CONFIG_SUPER] = "Super speed config (usb 3.0)",
@@ -164,7 +164,7 @@ static const USBDescDevice desc_device_super = {

 static const USBDesc desc = {
     .id = {
-        .idVendor          = 0x46f4, /* CRC16() of "QEMU" */
+        .idVendor          = 0x116d, /* CRC16() of "PVE" */
         .idProduct         = 0x0001,
         .bcdDevice         = 0,
         .iManufacturer     = STR_MANUFACTURER,
@@ -591,7 +591,7 @@ static void usb_msd_class_initfn_common(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

-    uc->product_desc   = "QEMU USB MSD";
+    uc->product_desc   = "PVE USB MSD";
     uc->usb_desc       = &desc;
     uc->cancel_packet  = usb_msd_cancel_io;
     uc->handle_attach  = usb_desc_attach;
diff --git a/hw/usb/dev-uas.c b/hw/usb/dev-uas.c
index 1804cb6799..efca9ed1dd 100644
--- a/hw/usb/dev-uas.c
+++ b/hw/usb/dev-uas.c
@@ -171,9 +171,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER] = "QEMU",
+    [STR_MANUFACTURER] = "PVE",
     [STR_PRODUCT]      = "USB Attached SCSI HBA",
-    [STR_SERIALNUMBER] = "27842",
+    [STR_SERIALNUMBER] = "33211",
     [STR_CONFIG_HIGH]  = "High speed config (usb 2.0)",
     [STR_CONFIG_SUPER] = "Super speed config (usb 3.0)",
 };
diff --git a/hw/usb/dev-wacom.c b/hw/usb/dev-wacom.c
index 7177c17f03..ea4b861b45 100644
--- a/hw/usb/dev-wacom.c
+++ b/hw/usb/dev-wacom.c
@@ -64,9 +64,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER]     = "QEMU",
+    [STR_MANUFACTURER]     = "PVE",
     [STR_PRODUCT]          = "Wacom PenPartner",
-    [STR_SERIALNUMBER]     = "1",
+    [STR_SERIALNUMBER]     = "28833363",
 };

 static const uint8_t qemu_wacom_hid_report_descriptor[] = {
@@ -231,7 +231,7 @@ static int usb_mouse_poll(USBWacomState *s, uint8_t *buf, int len)

     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_mouse_event, s, 0,
-                        "QEMU PenPartner tablet");
+                        "PVE PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
@@ -269,7 +269,7 @@ static int usb_wacom_poll(USBWacomState *s, uint8_t *buf, int len)

     if (!s->mouse_grabbed) {
         s->eh_entry = qemu_add_mouse_event_handler(usb_wacom_event, s, 1,
-                        "QEMU PenPartner tablet");
+                        "PVE PenPartner tablet");
         qemu_activate_mouse_event_handler(s->eh_entry);
         s->mouse_grabbed = 1;
     }
@@ -425,7 +425,7 @@ static void usb_wacom_class_init(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

-    uc->product_desc   = "QEMU PenPartner Tablet";
+    uc->product_desc   = "PVE PenPartner Tablet";
     uc->usb_desc       = &desc_wacom;
     uc->realize        = usb_wacom_realize;
     uc->handle_reset   = usb_wacom_handle_reset;
@@ -433,7 +433,7 @@ static void usb_wacom_class_init(ObjectClass *klass, void *data)
     uc->handle_data    = usb_wacom_handle_data;
     uc->unrealize      = usb_wacom_unrealize;
     set_bit(DEVICE_CATEGORY_INPUT, dc->categories);
-    dc->desc = "QEMU PenPartner Tablet";
+    dc->desc = "PVE PenPartner Tablet";
     dc->vmsd = &vmstate_usb_wacom;
 }

diff --git a/hw/usb/u2f-emulated.c b/hw/usb/u2f-emulated.c
index 63cceaa5fc..7a8ec9185f 100644
--- a/hw/usb/u2f-emulated.c
+++ b/hw/usb/u2f-emulated.c
@@ -386,7 +386,7 @@ static void u2f_emulated_class_init(ObjectClass *klass, void *data)
     kc->realize = u2f_emulated_realize;
     kc->unrealize = u2f_emulated_unrealize;
     kc->recv_from_guest = u2f_emulated_recv_from_guest;
-    dc->desc = "QEMU U2F emulated key";
+    dc->desc = "PVE U2F emulated key";
     device_class_set_props(dc, u2f_emulated_properties);
 }

diff --git a/hw/usb/u2f-passthru.c b/hw/usb/u2f-passthru.c
index b7025d303d..2f8ed8391a 100644
--- a/hw/usb/u2f-passthru.c
+++ b/hw/usb/u2f-passthru.c
@@ -531,7 +531,7 @@ static void u2f_passthru_class_init(ObjectClass *klass, void *data)
     kc->realize = u2f_passthru_realize;
     kc->unrealize = u2f_passthru_unrealize;
     kc->recv_from_guest = u2f_passthru_recv_from_guest;
-    dc->desc = "QEMU U2F passthrough key";
+    dc->desc = "PVE U2F passthrough key";
     dc->vmsd = &u2f_passthru_vmstate;
     device_class_set_props(dc, u2f_passthru_properties);
     set_bit(DEVICE_CATEGORY_MISC, dc->categories);
diff --git a/hw/usb/u2f.c b/hw/usb/u2f.c
index 1fb59cf404..d79dc85e4a 100644
--- a/hw/usb/u2f.c
+++ b/hw/usb/u2f.c
@@ -34,7 +34,7 @@
 #include "u2f.h"

 /* U2F key Vendor / Product */
-#define U2F_KEY_VENDOR_NUM     0x46f4 /* CRC16() of "QEMU" */
+#define U2F_KEY_VENDOR_NUM     0x116d /* CRC16() of "PVE" */
 #define U2F_KEY_PRODUCT_NUM    0x0005

 enum {
@@ -46,9 +46,9 @@ enum {
 };

 static const USBDescStrings desc_strings = {
-    [STR_MANUFACTURER]     = "QEMU",
+    [STR_MANUFACTURER]     = "PVE",
     [STR_PRODUCT]          = "U2F USB key",
-    [STR_SERIALNUMBER]     = "0",
+    [STR_SERIALNUMBER]     = "78776",
     [STR_CONFIG]           = "U2F key config",
     [STR_INTERFACE]        = "U2F key interface"
 };
@@ -322,7 +322,7 @@ static void u2f_key_class_init(ObjectClass *klass, void *data)
     DeviceClass *dc = DEVICE_CLASS(klass);
     USBDeviceClass *uc = USB_DEVICE_CLASS(klass);

-    uc->product_desc   = "QEMU U2F USB key";
+    uc->product_desc   = "PVE U2F USB key";
     uc->usb_desc       = &desc_u2f_key;
     uc->handle_reset   = u2f_key_handle_reset;
     uc->handle_control = u2f_key_handle_control;
@@ -330,7 +330,7 @@ static void u2f_key_class_init(ObjectClass *klass, void *data)
     uc->handle_attach  = usb_desc_attach;
     uc->realize        = u2f_key_realize;
     uc->unrealize      = u2f_key_unrealize;
-    dc->desc           = "QEMU U2F key";
+    dc->desc           = "PVE U2F key";
     dc->vmsd           = &vmstate_u2f_key;
 }

diff --git a/hw/vfio/amd-xgbe.c b/hw/vfio/amd-xgbe.c
index 96bd608b8d..c13a378f54 100644
--- a/hw/vfio/amd-xgbe.c
+++ b/hw/vfio/amd-xgbe.c
@@ -39,7 +39,7 @@ static void vfio_amd_xgbe_class_init(ObjectClass *klass, void *data)
         VFIO_AMD_XGBE_DEVICE_CLASS(klass);
     device_class_set_parent_realize(dc, amd_xgbe_realize,
                                     &vcxc->parent_realize);
-    dc->desc = "VFIO AMD XGBE";
+    dc->desc = "AMD AMD XGBE";
     dc->vmsd = &vfio_platform_amd_xgbe_vmstate;
     /* Supported by TYPE_VIRT_MACHINE */
     dc->user_creatable = true;
diff --git a/hw/vfio/platform.c b/hw/vfio/platform.c
index dcd2365fb3..57e2b229a3 100644
--- a/hw/vfio/platform.c
+++ b/hw/vfio/platform.c
@@ -680,7 +680,7 @@ static void vfio_platform_class_init(ObjectClass *klass, void *data)
     object_class_property_add_str(klass, "fd", NULL, vfio_platform_set_fd);
 #endif
     dc->vmsd = &vfio_platform_vmstate;
-    dc->desc = "VFIO-based platform device assignment";
+    dc->desc = "PVE-based platform device assignment";
     sbc->connect_irq_notifier = vfio_start_irqfd_injection;
     set_bit(DEVICE_CATEGORY_MISC, dc->categories);
     /* Supported by TYPE_VIRT_MACHINE */
diff --git a/hw/virtio/vhost-scsi-pci.c b/hw/virtio/vhost-scsi-pci.c
index 08980bc23b..2f02fd28d9 100644
--- a/hw/virtio/vhost-scsi-pci.c
+++ b/hw/virtio/vhost-scsi-pci.c
@@ -88,9 +88,9 @@ static void vhost_scsi_pci_instance_init(Object *obj)

 static const VirtioPCIDeviceTypeInfo vhost_scsi_pci_info = {
     .base_name             = TYPE_VHOST_SCSI_PCI,
-    .generic_name          = "vhost-scsi-pci",
-    .transitional_name     = "vhost-scsi-pci-transitional",
-    .non_transitional_name = "vhost-scsi-pci-non-transitional",
+    .generic_name          = "pve-scsi-pci",
+    .transitional_name     = "pve-scsi-pci-transitional",
+    .non_transitional_name = "pve-scsi-pci-non-transitional",
     .instance_size = sizeof(VHostSCSIPCI),
     .instance_init = vhost_scsi_pci_instance_init,
     .class_init    = vhost_scsi_pci_class_init,
diff --git a/hw/virtio/virtio-balloon-pci.c b/hw/virtio/virtio-balloon-pci.c
index ce2645ba71..5e0d70c7dd 100644
--- a/hw/virtio/virtio-balloon-pci.c
+++ b/hw/virtio/virtio-balloon-pci.c
@@ -72,9 +72,9 @@ static void virtio_balloon_pci_instance_init(Object *obj)

 static const VirtioPCIDeviceTypeInfo virtio_balloon_pci_info = {
     .base_name             = TYPE_VIRTIO_BALLOON_PCI,
-    .generic_name          = "virtio-balloon-pci",
-    .transitional_name     = "virtio-balloon-pci-transitional",
-    .non_transitional_name = "virtio-balloon-pci-non-transitional",
+    .generic_name          = "pve-balloon-pci",
+    .transitional_name     = "pve-balloon-pci-transitional",
+    .non_transitional_name = "pve-balloon-pci-non-transitional",
     .instance_size = sizeof(VirtIOBalloonPCI),
     .instance_init = virtio_balloon_pci_instance_init,
     .class_init    = virtio_balloon_pci_class_init,
diff --git a/hw/virtio/virtio-balloon.c b/hw/virtio/virtio-balloon.c
index 609e39a821..37e00ebb15 100644
--- a/hw/virtio/virtio-balloon.c
+++ b/hw/virtio/virtio-balloon.c
@@ -812,7 +812,7 @@ static int virtio_balloon_post_load_device(void *opaque, int version_id)
 }

 static const VMStateDescription vmstate_virtio_balloon_free_page_hint = {
-    .name = "virtio-balloon-device/free-page-report",
+    .name = "pve-balloon-device/free-page-report",
     .version_id = 1,
     .minimum_version_id = 1,
     .needed = virtio_balloon_free_page_support,
@@ -824,7 +824,7 @@ static const VMStateDescription vmstate_virtio_balloon_free_page_hint = {
 };

 static const VMStateDescription vmstate_virtio_balloon_page_poison = {
-    .name = "virtio-balloon-device/page-poison",
+    .name = "pve-balloon-device/page-poison",
     .version_id = 1,
     .minimum_version_id = 1,
     .needed = virtio_balloon_page_poison_support,
@@ -835,7 +835,7 @@ static const VMStateDescription vmstate_virtio_balloon_page_poison = {
 };

 static const VMStateDescription vmstate_virtio_balloon_device = {
-    .name = "virtio-balloon-device",
+    .name = "pve-balloon-device",
     .version_id = 1,
     .minimum_version_id = 1,
     .post_load = virtio_balloon_post_load_device,
diff --git a/hw/virtio/virtio-blk-pci.c b/hw/virtio/virtio-blk-pci.c
index 9743bee965..cccc20bfd5 100644
--- a/hw/virtio/virtio-blk-pci.c
+++ b/hw/virtio/virtio-blk-pci.c
@@ -29,7 +29,7 @@ typedef struct VirtIOBlkPCI VirtIOBlkPCI;
 /*
  * virtio-blk-pci: This extends VirtioPCIProxy.
  */
-#define TYPE_VIRTIO_BLK_PCI "virtio-blk-pci-base"
+#define TYPE_VIRTIO_BLK_PCI "vitio-blk-pci-base"
 DECLARE_INSTANCE_CHECKER(VirtIOBlkPCI, VIRTIO_BLK_PCI,
                          TYPE_VIRTIO_BLK_PCI)

@@ -91,9 +91,9 @@ static void virtio_blk_pci_instance_init(Object *obj)

 static const VirtioPCIDeviceTypeInfo virtio_blk_pci_info = {
     .base_name              = TYPE_VIRTIO_BLK_PCI,
-    .generic_name           = "virtio-blk-pci",
-    .transitional_name      = "virtio-blk-pci-transitional",
-    .non_transitional_name  = "virtio-blk-pci-non-transitional",
+    .generic_name           = "pve-blk-pci",
+    .transitional_name      = "pve-blk-pci-transitional",
+    .non_transitional_name  = "pve-blk-pci-non-transitional",
     .instance_size = sizeof(VirtIOBlkPCI),
     .instance_init = virtio_blk_pci_instance_init,
     .class_init    = virtio_blk_pci_class_init,
diff --git a/hw/virtio/virtio-net-pci.c b/hw/virtio/virtio-net-pci.c
index e03543a70a..89c7a64a13 100644
--- a/hw/virtio/virtio-net-pci.c
+++ b/hw/virtio/virtio-net-pci.c
@@ -29,7 +29,7 @@ typedef struct VirtIONetPCI VirtIONetPCI;
 /*
  * virtio-net-pci: This extends VirtioPCIProxy.
  */
-#define TYPE_VIRTIO_NET_PCI "virtio-net-pci-base"
+#define TYPE_VIRTIO_NET_PCI "vitio-net-pci-base"
 DECLARE_INSTANCE_CHECKER(VirtIONetPCI, VIRTIO_NET_PCI,
                          TYPE_VIRTIO_NET_PCI)

@@ -92,9 +92,9 @@ static void virtio_net_pci_instance_init(Object *obj)

 static const VirtioPCIDeviceTypeInfo virtio_net_pci_info = {
     .base_name             = TYPE_VIRTIO_NET_PCI,
-    .generic_name          = "virtio-net-pci",
-    .transitional_name     = "virtio-net-pci-transitional",
-    .non_transitional_name = "virtio-net-pci-non-transitional",
+    .generic_name          = "pve-net-pci",
+    .transitional_name     = "pve-net-pci-transitional",
+    .non_transitional_name = "pve-net-pci-non-transitional",
     .instance_size = sizeof(VirtIONetPCI),
     .instance_init = virtio_net_pci_instance_init,
     .class_init    = virtio_net_pci_class_init,
diff --git a/hw/virtio/virtio-scsi-pci.c b/hw/virtio/virtio-scsi-pci.c
index e8e3442f38..1a5d7614d0 100644
--- a/hw/virtio/virtio-scsi-pci.c
+++ b/hw/virtio/virtio-scsi-pci.c
@@ -26,7 +26,7 @@ typedef struct VirtIOSCSIPCI VirtIOSCSIPCI;
 /*
  * virtio-scsi-pci: This extends VirtioPCIProxy.
  */
-#define TYPE_VIRTIO_SCSI_PCI "virtio-scsi-pci-base"
+#define TYPE_VIRTIO_SCSI_PCI "vitio-scsi-pci-base"
 DECLARE_INSTANCE_CHECKER(VirtIOSCSIPCI, VIRTIO_SCSI_PCI,
                          TYPE_VIRTIO_SCSI_PCI)

@@ -98,9 +98,9 @@ static void virtio_scsi_pci_instance_init(Object *obj)

 static const VirtioPCIDeviceTypeInfo virtio_scsi_pci_info = {
     .base_name              = TYPE_VIRTIO_SCSI_PCI,
-    .generic_name           = "virtio-scsi-pci",
-    .transitional_name      = "virtio-scsi-pci-transitional",
-    .non_transitional_name  = "virtio-scsi-pci-non-transitional",
+    .generic_name           = "pve-scsi-pci",
+    .transitional_name      = "pve-scsi-pci-transitional",
+    .non_transitional_name  = "pve-scsi-pci-non-transitional",
     .instance_size = sizeof(VirtIOSCSIPCI),
     .instance_init = virtio_scsi_pci_instance_init,
     .class_init    = virtio_scsi_pci_class_init,
diff --git a/hw/virtio/virtio-serial-pci.c b/hw/virtio/virtio-serial-pci.c
index cea31adcc4..baf93d597b 100644
--- a/hw/virtio/virtio-serial-pci.c
+++ b/hw/virtio/virtio-serial-pci.c
@@ -28,7 +28,7 @@ typedef struct VirtIOSerialPCI VirtIOSerialPCI;
 /*
  * virtio-serial-pci: This extends VirtioPCIProxy.
  */
-#define TYPE_VIRTIO_SERIAL_PCI "virtio-serial-pci-base"
+#define TYPE_VIRTIO_SERIAL_PCI "vitio-serial-pci-base"
 DECLARE_INSTANCE_CHECKER(VirtIOSerialPCI, VIRTIO_SERIAL_PCI,
                          TYPE_VIRTIO_SERIAL_PCI)

diff --git a/hw/virtio/virtio.c b/hw/virtio/virtio.c
index fd2dfe3a6b..d7a17b5812 100644
--- a/hw/virtio/virtio.c
+++ b/hw/virtio/virtio.c
@@ -155,45 +155,45 @@ struct VirtQueue
 };

 const char *virtio_device_names[] = {
-    [VIRTIO_ID_NET] = "virtio-net",
-    [VIRTIO_ID_BLOCK] = "virtio-blk",
-    [VIRTIO_ID_CONSOLE] = "virtio-serial",
-    [VIRTIO_ID_RNG] = "virtio-rng",
-    [VIRTIO_ID_BALLOON] = "virtio-balloon",
-    [VIRTIO_ID_IOMEM] = "virtio-iomem",
-    [VIRTIO_ID_RPMSG] = "virtio-rpmsg",
-    [VIRTIO_ID_SCSI] = "virtio-scsi",
-    [VIRTIO_ID_9P] = "virtio-9p",
-    [VIRTIO_ID_MAC80211_WLAN] = "virtio-mac-wlan",
-    [VIRTIO_ID_RPROC_SERIAL] = "virtio-rproc-serial",
-    [VIRTIO_ID_CAIF] = "virtio-caif",
-    [VIRTIO_ID_MEMORY_BALLOON] = "virtio-mem-balloon",
-    [VIRTIO_ID_GPU] = "virtio-gpu",
-    [VIRTIO_ID_CLOCK] = "virtio-clk",
-    [VIRTIO_ID_INPUT] = "virtio-input",
+    [VIRTIO_ID_NET] = "pve-net",
+    [VIRTIO_ID_BLOCK] = "pve-blk",
+    [VIRTIO_ID_CONSOLE] = "pve-serial",
+    [VIRTIO_ID_RNG] = "pve-rng",
+    [VIRTIO_ID_BALLOON] = "pve-balloon",
+    [VIRTIO_ID_IOMEM] = "pve-iomem",
+    [VIRTIO_ID_RPMSG] = "pve-rpmsg",
+    [VIRTIO_ID_SCSI] = "pve-scsi",
+    [VIRTIO_ID_9P] = "pve-9p",
+    [VIRTIO_ID_MAC80211_WLAN] = "pve-mac-wlan",
+    [VIRTIO_ID_RPROC_SERIAL] = "pve-rproc-serial",
+    [VIRTIO_ID_CAIF] = "pve-caif",
+    [VIRTIO_ID_MEMORY_BALLOON] = "pve-mem-balloon",
+    [VIRTIO_ID_GPU] = "pve-gpu",
+    [VIRTIO_ID_CLOCK] = "pve-clk",
+    [VIRTIO_ID_INPUT] = "pve-input",
     [VIRTIO_ID_VSOCK] = "vhost-vsock",
-    [VIRTIO_ID_CRYPTO] = "virtio-crypto",
-    [VIRTIO_ID_SIGNAL_DIST] = "virtio-signal",
-    [VIRTIO_ID_PSTORE] = "virtio-pstore",
-    [VIRTIO_ID_IOMMU] = "virtio-iommu",
-    [VIRTIO_ID_MEM] = "virtio-mem",
-    [VIRTIO_ID_SOUND] = "virtio-sound",
-    [VIRTIO_ID_FS] = "virtio-user-fs",
-    [VIRTIO_ID_PMEM] = "virtio-pmem",
-    [VIRTIO_ID_RPMB] = "virtio-rpmb",
-    [VIRTIO_ID_MAC80211_HWSIM] = "virtio-mac-hwsim",
-    [VIRTIO_ID_VIDEO_ENCODER] = "virtio-vid-encoder",
-    [VIRTIO_ID_VIDEO_DECODER] = "virtio-vid-decoder",
-    [VIRTIO_ID_SCMI] = "virtio-scmi",
-    [VIRTIO_ID_NITRO_SEC_MOD] = "virtio-nitro-sec-mod",
+    [VIRTIO_ID_CRYPTO] = "pve-crypto",
+    [VIRTIO_ID_SIGNAL_DIST] = "pve-signal",
+    [VIRTIO_ID_PSTORE] = "pve-pstore",
+    [VIRTIO_ID_IOMMU] = "pve-iommu",
+    [VIRTIO_ID_MEM] = "pve-mem",
+    [VIRTIO_ID_SOUND] = "pve-sound",
+    [VIRTIO_ID_FS] = "pve-user-fs",
+    [VIRTIO_ID_PMEM] = "pve-pmem",
+    [VIRTIO_ID_RPMB] = "pve-rpmb",
+    [VIRTIO_ID_MAC80211_HWSIM] = "pve-mac-hwsim",
+    [VIRTIO_ID_VIDEO_ENCODER] = "pve-vid-encoder",
+    [VIRTIO_ID_VIDEO_DECODER] = "pve-vid-decoder",
+    [VIRTIO_ID_SCMI] = "pve-scmi",
+    [VIRTIO_ID_NITRO_SEC_MOD] = "pve-nitro-sec-mod",
     [VIRTIO_ID_I2C_ADAPTER] = "vhost-user-i2c",
-    [VIRTIO_ID_WATCHDOG] = "virtio-watchdog",
-    [VIRTIO_ID_CAN] = "virtio-can",
-    [VIRTIO_ID_DMABUF] = "virtio-dmabuf",
-    [VIRTIO_ID_PARAM_SERV] = "virtio-param-serv",
-    [VIRTIO_ID_AUDIO_POLICY] = "virtio-audio-pol",
-    [VIRTIO_ID_BT] = "virtio-bluetooth",
-    [VIRTIO_ID_GPIO] = "virtio-gpio"
+    [VIRTIO_ID_WATCHDOG] = "pve-watchdog",
+    [VIRTIO_ID_CAN] = "pve-can",
+    [VIRTIO_ID_DMABUF] = "pve-dmabuf",
+    [VIRTIO_ID_PARAM_SERV] = "pve-param-serv",
+    [VIRTIO_ID_AUDIO_POLICY] = "pve-audio-pol",
+    [VIRTIO_ID_BT] = "pve-bluetooth",
+    [VIRTIO_ID_GPIO] = "pve-gpio"
 };

 static const char *virtio_id_to_name(uint16_t device_id)
diff --git a/include/hw/acpi/aml-build.h b/include/hw/acpi/aml-build.h
index a3784155cb..15d86bb95d 100644
--- a/include/hw/acpi/aml-build.h
+++ b/include/hw/acpi/aml-build.h
@@ -4,8 +4,8 @@
 #include "hw/acpi/acpi-defs.h"
 #include "hw/acpi/bios-linker-loader.h"

-#define ACPI_BUILD_APPNAME6 "BOCHS "
-#define ACPI_BUILD_APPNAME8 "BXPC    "
+#define ACPI_BUILD_APPNAME6 "ALASKA"
+#define ACPI_BUILD_APPNAME8 "A M I   "

 #define ACPI_BUILD_TABLE_FILE "etc/acpi/tables"
 #define ACPI_BUILD_RSDP_FILE "etc/acpi/rsdp"
diff --git a/include/hw/pci/pci.h b/include/hw/pci/pci.h
index eaa3fc99d8..5dbd2b7f49 100644
--- a/include/hw/pci/pci.h
+++ b/include/hw/pci/pci.h
@@ -72,9 +72,9 @@ extern bool pci_available;
 #define PCI_DEVICE_ID_INTEL_82801IR      0x2922

 /* Red Hat / Qumranet (for QEMU) -- see pci-ids.txt */
-#define PCI_VENDOR_ID_REDHAT_QUMRANET    0x1af4
-#define PCI_SUBVENDOR_ID_REDHAT_QUMRANET 0x1af4
-#define PCI_SUBDEVICE_ID_QEMU            0x1100
+#define PCI_VENDOR_ID_REDHAT_QUMRANET    0x8086
+#define PCI_SUBVENDOR_ID_REDHAT_QUMRANET 0x8086
+#define PCI_SUBDEVICE_ID_QEMU            0x8086

 /* legacy virtio-pci devices */
 #define PCI_DEVICE_ID_VIRTIO_NET         0x1000
@@ -95,7 +95,7 @@ extern bool pci_available;
  */
 #define PCI_DEVICE_ID_VIRTIO_10_BASE     0x1040

-#define PCI_VENDOR_ID_REDHAT             0x1b36
+#define PCI_VENDOR_ID_REDHAT             0x8086
 #define PCI_DEVICE_ID_REDHAT_BRIDGE      0x0001
 #define PCI_DEVICE_ID_REDHAT_SERIAL      0x0002
 #define PCI_DEVICE_ID_REDHAT_SERIAL2     0x0003
diff --git a/include/hw/virtio/virtio-scsi.h b/include/hw/virtio/virtio-scsi.h
index 7be0105918..e9a1b83759 100644
--- a/include/hw/virtio/virtio-scsi.h
+++ b/include/hw/virtio/virtio-scsi.h
@@ -24,10 +24,10 @@
 #include "chardev/char-fe.h"
 #include "sysemu/iothread.h"

-#define TYPE_VIRTIO_SCSI_COMMON "virtio-scsi-common"
+#define TYPE_VIRTIO_SCSI_COMMON "pve-scsi-common"
 OBJECT_DECLARE_SIMPLE_TYPE(VirtIOSCSICommon, VIRTIO_SCSI_COMMON)

-#define TYPE_VIRTIO_SCSI "virtio-scsi-device"
+#define TYPE_VIRTIO_SCSI "pve-scsi-device"
 OBJECT_DECLARE_SIMPLE_TYPE(VirtIOSCSI, VIRTIO_SCSI)

 #define VIRTIO_SCSI_MAX_CHANNEL 0
diff --git a/include/standard-headers/linux/qemu_fw_cfg.h b/include/standard-headers/linux/qemu_fw_cfg.h
index cb93f6678d..4f9722f350 100644
--- a/include/standard-headers/linux/qemu_fw_cfg.h
+++ b/include/standard-headers/linux/qemu_fw_cfg.h
@@ -4,7 +4,7 @@

 #include "standard-headers/linux/types.h"

-#define FW_CFG_ACPI_DEVICE_ID  "QEMU0002"
+#define FW_CFG_ACPI_DEVICE_ID  "PVE0002"

 /* selector key values for "well-known" fw_cfg entries */
 #define FW_CFG_SIGNATURE       0x00
@@ -71,7 +71,7 @@ struct fw_cfg_file {
 #define FW_CFG_DMA_CTL_SELECT  0x08
 #define FW_CFG_DMA_CTL_WRITE   0x10

-#define FW_CFG_DMA_SIGNATURE    0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE    0x4153532520474647ULL /* "QEMU CFG" */

 /* Control as first field allows for different structures selected by this
  * field, which might be useful in the future
diff --git a/migration/rdma.c b/migration/rdma.c
index 855753c671..81b3fd2d87 100644
--- a/migration/rdma.c
+++ b/migration/rdma.c
@@ -220,7 +220,7 @@ static const char *control_desc(unsigned int rdma_control)
         [RDMA_CONTROL_NONE] = "NONE",
         [RDMA_CONTROL_ERROR] = "ERROR",
         [RDMA_CONTROL_READY] = "READY",
-        [RDMA_CONTROL_QEMU_FILE] = "QEMU FILE",
+        [RDMA_CONTROL_QEMU_FILE] = "PVE FILE",
         [RDMA_CONTROL_RAM_BLOCKS_REQUEST] = "RAM BLOCKS REQUEST",
         [RDMA_CONTROL_RAM_BLOCKS_RESULT] = "RAM BLOCKS RESULT",
         [RDMA_CONTROL_COMPRESS] = "COMPRESS",
diff --git a/pc-bios/optionrom/optionrom.h b/pc-bios/optionrom/optionrom.h
index 7bcdf0eeb2..900a48193d 100644
--- a/pc-bios/optionrom/optionrom.h
+++ b/pc-bios/optionrom/optionrom.h
@@ -43,7 +43,7 @@
 #define FW_CFG_DMA_CTL_SELECT  0x08
 #define FW_CFG_DMA_CTL_WRITE   0x10

-#define FW_CFG_DMA_SIGNATURE 0x51454d5520434647ULL /* "QEMU CFG" */
+#define FW_CFG_DMA_SIGNATURE 0x4153532520474647ULL /* "QEMU CFG" */

 #define BIOS_CFG_DMA_ADDR_HIGH  0x514
 #define BIOS_CFG_DMA_ADDR_LOW   0x518
diff --git a/pc-bios/s390-ccw/virtio-scsi.h b/pc-bios/s390-ccw/virtio-scsi.h
index c5612e16a2..5f5b7fb9f3 100644
--- a/pc-bios/s390-ccw/virtio-scsi.h
+++ b/pc-bios/s390-ccw/virtio-scsi.h
@@ -25,7 +25,7 @@
 #define VIRTIO_SCSI_S_OK                     0x00
 #define VIRTIO_SCSI_S_BAD_TARGET             0x03

-#define QEMU_CDROM_SIGNATURE "QEMU CD-ROM     "
+#define QEMU_CDROM_SIGNATURE "PVE CD-ROM     "

 enum virtio_scsi_vq_id {
     VR_CONTROL  = 0,
diff --git a/qapi/ui.json b/qapi/ui.json
index f610bce118..f66f7cab9e 100644
--- a/qapi/ui.json
+++ b/qapi/ui.json
@@ -833,13 +833,13 @@
 #     -> { "execute": "query-mice" }
 #     <- { "return": [
 #              {
-#                 "name":"QEMU Microsoft Mouse",
+#                 "name":"PVE Microsoft Mouse",
 #                 "index":0,
 #                 "current":false,
 #                 "absolute":false
 #              },
 #              {
-#                 "name":"QEMU PS/2 Mouse",
+#                 "name":"PVE PS/2 Mouse",
 #                 "index":1,
 #                 "current":true,
 #                 "absolute":true
diff --git a/qga/vss-win32/vss-handles.h b/qga/vss-win32/vss-handles.h
index 1a7d842129..9e5fcb681d 100644
--- a/qga/vss-win32/vss-handles.h
+++ b/qga/vss-win32/vss-handles.h
@@ -3,7 +3,7 @@

 /* Constants for QGA VSS Provider */

-#define QGA_PROVIDER_NAME "QEMU Guest Agent VSS Provider"
+#define QGA_PROVIDER_NAME "PVE Guest Agent VSS Provider"
 #define QGA_PROVIDER_LNAME L(QGA_PROVIDER_NAME)
 #define QGA_PROVIDER_VERSION L(QEMU_VERSION)
 #define QGA_PROVIDER_REGISTRY_ADDRESS "SYSTEM\\CurrentControlSet"\
diff --git a/target/i386/kvm/kvm.c b/target/i386/kvm/kvm.c
index e68cbe9293..4a5ee20091 100644
--- a/target/i386/kvm/kvm.c
+++ b/target/i386/kvm/kvm.c
@@ -1862,7 +1862,7 @@ int kvm_arch_init_vcpu(CPUState *cs)
         abort();
 #endif
     } else if (cpu->expose_kvm) {
-        memcpy(signature, "KVMKVMKVM\0\0\0", 12);
+        memcpy(signature, "AuthenticAMD", 12);
         c = &cpuid_data.entries[cpuid_i++];
         c->function = KVM_CPUID_SIGNATURE | kvm_base;
         c->eax = KVM_CPUID_FEATURES | kvm_base;
diff --git a/target/s390x/tcg/misc_helper.c b/target/s390x/tcg/misc_helper.c
index 8764846ce8..de0c4a1365 100644
--- a/target/s390x/tcg/misc_helper.c
+++ b/target/s390x/tcg/misc_helper.c
@@ -325,18 +325,18 @@ uint32_t HELPER(stsi)(CPUS390XState *env, uint64_t a0, uint64_t r0, uint64_t r1)
             /* Basic Machine Configuration */
             char type[5] = {};

-            ebcdic_put(sysib.sysib_111.manuf, "QEMU            ", 16);
+            ebcdic_put(sysib.sysib_111.manuf, "PVE            ", 16);
             /* same as machine type number in STORE CPU ID, but in EBCDIC */
             snprintf(type, ARRAY_SIZE(type), "%X", cpu->model->def->type);
             ebcdic_put(sysib.sysib_111.type, type, 4);
             /* model number (not stored in STORE CPU ID for z/Architecture) */
-            ebcdic_put(sysib.sysib_111.model, "QEMU            ", 16);
-            ebcdic_put(sysib.sysib_111.sequence, "QEMU            ", 16);
-            ebcdic_put(sysib.sysib_111.plant, "QEMU", 4);
+            ebcdic_put(sysib.sysib_111.model, "PVE            ", 16);
+            ebcdic_put(sysib.sysib_111.sequence, "PVE            ", 16);
+            ebcdic_put(sysib.sysib_111.plant, "PVE", 4);
         } else if ((sel1 == 2) && (sel2 == 1)) {
             /* Basic Machine CPU */
-            ebcdic_put(sysib.sysib_121.sequence, "QEMUQEMUQEMUQEMU", 16);
-            ebcdic_put(sysib.sysib_121.plant, "QEMU", 4);
+            ebcdic_put(sysib.sysib_121.sequence, "PVEPVEPVEPVEPVEP", 16);
+            ebcdic_put(sysib.sysib_121.plant, "PVE", 4);
             sysib.sysib_121.cpu_addr = cpu_to_be16(env->core_id);
         } else if ((sel1 == 2) && (sel2 == 2)) {
             /* Basic Machine CPUs */
@@ -351,8 +351,8 @@ uint32_t HELPER(stsi)(CPUS390XState *env, uint64_t a0, uint64_t r0, uint64_t r1)
     case STSI_R0_FC_LEVEL_2:
         if ((sel1 == 2) && (sel2 == 1)) {
             /* LPAR CPU */
-            ebcdic_put(sysib.sysib_221.sequence, "QEMUQEMUQEMUQEMU", 16);
-            ebcdic_put(sysib.sysib_221.plant, "QEMU", 4);
+            ebcdic_put(sysib.sysib_221.sequence, "PVEPVEPVEPVEPVEP", 16);
+            ebcdic_put(sysib.sysib_221.plant, "PVE", 4);
             sysib.sysib_221.cpu_addr = cpu_to_be16(env->core_id);
         } else if ((sel1 == 2) && (sel2 == 2)) {
             /* LPAR CPUs */
@@ -360,7 +360,7 @@ uint32_t HELPER(stsi)(CPUS390XState *env, uint64_t a0, uint64_t r0, uint64_t r1)
             sysib.sysib_222.total_cpus = cpu_to_be16(total_cpus);
             sysib.sysib_222.conf_cpus = cpu_to_be16(conf_cpus);
             sysib.sysib_222.reserved_cpus = cpu_to_be16(reserved_cpus);
-            ebcdic_put(sysib.sysib_222.name, "QEMU    ", 8);
+            ebcdic_put(sysib.sysib_222.name, "PVE    ", 8);
             sysib.sysib_222.caf = cpu_to_be32(1000);
             sysib.sysib_222.dedicated_cpus = cpu_to_be16(conf_cpus);
         } else {
diff --git a/ui/spice-core.c b/ui/spice-core.c
index 15be640286..1938410c25 100644
--- a/ui/spice-core.c
+++ b/ui/spice-core.c
@@ -808,7 +808,7 @@ static void qemu_spice_init(void)

     qemu_opt_foreach(opts, add_channel, &tls_port, &error_fatal);

-    spice_server_set_name(spice_server, qemu_name ?: "QEMU " QEMU_VERSION);
+    spice_server_set_name(spice_server, qemu_name ?: "PVE " QEMU_VERSION);
     spice_server_set_uuid(spice_server, (unsigned char *)&qemu_uuid);

     seamless_migration = qemu_opt_get_bool(opts, "seamless-migration", 0);
diff --git a/ui/spice-input.c b/ui/spice-input.c
index a5c5d78474..6b46b8f1b5 100644
--- a/ui/spice-input.c
+++ b/ui/spice-input.c
@@ -39,7 +39,7 @@ static uint8_t kbd_get_leds(SpiceKbdInstance *sin);

 static const SpiceKbdInterface kbd_interface = {
     .base.type          = SPICE_INTERFACE_KEYBOARD,
-    .base.description   = "qemu keyboard",
+    .base.description   = "pve keyboard",
     .base.major_version = SPICE_INTERFACE_KEYBOARD_MAJOR,
     .base.minor_version = SPICE_INTERFACE_KEYBOARD_MINOR,
     .push_scan_freg     = kbd_push_key,